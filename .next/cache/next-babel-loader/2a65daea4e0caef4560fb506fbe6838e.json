{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROVSHAN GROUP\\\\Desktop\\\\noorali\\\\bitzprice\\\\components\\\\Prices.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nclass Prices extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currency: 'GBP'\n    });\n  }\n\n  render() {\n    let list = '';\n\n    if (this.state.currency === 'USD') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, \"bitcoin rate for \", this.props.bpi.USD.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \" \", this.props.bpi.USD.code, \" \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }, \" \", this.props.bpi.USD.rate, \" \"));\n    } else if (this.state.currency === 'GBP') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"bitcoin rate for \", this.props.bpi.GBP.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \" \", this.props.bpi.GBP.code, \" \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \" \", this.props.bpi.GBP.rate, \" \"));\n    } else if (this.state.currency === 'EUR') {\n      list = __jsx(\"li\", {\n        className: \"list-group-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"bitcoin rate for \", this.props.bpi.EUR.description, \": \", __jsx(\"span\", {\n        className: \"badge badge-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \" \", this.props.bpi.EUR.code, \" \"), __jsx(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" \", this.props.bpi.EUR.rate, \" \"));\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, list), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), __jsx(\"select\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"option\", {\n      value: \"USD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"USD\"), __jsx(\"option\", {\n      value: \"GBP\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"GBP\"), __jsx(\"option\", {\n      value: \"EUR\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"EUR\")));\n  }\n\n}\n\nexport default Prices;","map":{"version":3,"sources":["C:/Users/ROVSHAN GROUP/Desktop/noorali/bitzprice/components/Prices.jsx"],"names":["Prices","React","Component","currency","render","list","state","props","bpi","USD","description","code","rate","GBP","EUR"],"mappings":";;;;;;AAAA,MAAMA,MAAN,SAAqBC,KAAK,CAACC,SAA3B,CAAoC;AAAA;AAAA;;AAAA,mCAC1B;AACFC,MAAAA,QAAQ,EAAE;AADR,KAD0B;AAAA;;AAIhCC,EAAAA,MAAM,GAAE;AACJ,QAAIC,IAAI,GAAG,EAAX;;AAEA,QAAG,KAAKC,KAAL,CAAWH,QAAX,KAAwB,KAA3B,EAAiC;AAC7BE,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBC,WADtC,QACoD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwC,KAAKH,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBE,IAA3D,MADpD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeC,GAAf,CAAmBG,IAA7B,MAFD,CAAP;AAIH,KALD,MAMK,IAAG,KAAKN,KAAL,CAAWH,QAAX,KAAwB,KAA3B,EAAiC;AAClCE,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBH,WADtC,QACoD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwC,KAAKH,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBF,IAA3D,MADpD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeK,GAAf,CAAmBD,IAA7B,MAFD,CAAP;AAIH,KALI,MAMA,IAAG,KAAKN,KAAL,CAAWH,QAAX,KAAwB,KAA3B,EAAiC;AAClCE,MAAAA,IAAI,GAAG;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACmB,KAAKE,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBJ,WADtC,QACoD;AAAM,QAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAwC,KAAKH,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBH,IAA3D,MADpD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAU,KAAKJ,KAAL,CAAWC,GAAX,CAAeM,GAAf,CAAmBF,IAA7B,MAFD,CAAP;AAIH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKP,IADL,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,EAGI;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHJ,CALJ,CADJ;AAaH;;AAtC+B;;AAyCpC,eAAeL,MAAf","sourcesContent":["class Prices extends React.Component{\r\n    state={\r\n        currency: 'GBP'\r\n    }\r\n    render(){\r\n        let list = '';\r\n\r\n        if(this.state.currency === 'USD'){\r\n            list = <li className=\"list-group-item\">\r\n                    bitcoin rate for {this.props.bpi.USD.description}: <span className=\"badge badge-primary\"> {this.props.bpi.USD.code} </span>\r\n                    <strong> {this.props.bpi.USD.rate} </strong>\r\n            </li>\r\n        }\r\n        else if(this.state.currency === 'GBP'){\r\n            list = <li className=\"list-group-item\">\r\n                    bitcoin rate for {this.props.bpi.GBP.description}: <span className=\"badge badge-primary\"> {this.props.bpi.GBP.code} </span>\r\n                    <strong> {this.props.bpi.GBP.rate} </strong>\r\n            </li>\r\n        }\r\n        else if(this.state.currency === 'EUR'){\r\n            list = <li className=\"list-group-item\">\r\n                    bitcoin rate for {this.props.bpi.EUR.description}: <span className=\"badge badge-primary\"> {this.props.bpi.EUR.code} </span>\r\n                    <strong> {this.props.bpi.EUR.rate} </strong>\r\n            </li>\r\n        }\r\n        return(\r\n            <div>\r\n                <ul className=\"list-group\">\r\n                    {list}\r\n                </ul>\r\n                <br/>\r\n                <select className=\"form-control\">\r\n                    <option value=\"USD\">USD</option>\r\n                    <option value=\"GBP\">GBP</option>\r\n                    <option value=\"EUR\">EUR</option>\r\n                </select>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Prices;"]},"metadata":{},"sourceType":"module"}